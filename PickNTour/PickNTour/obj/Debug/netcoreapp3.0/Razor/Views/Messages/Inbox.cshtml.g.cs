#pragma checksum "C:\Users\Nick\Documents\GitHub\PickNTour\PickNTour\PickNTour\Views\Messages\Inbox.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "057f3d1b584e3b1b45cad6a49a6d9beecc843b18"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Messages_Inbox), @"mvc.1.0.view", @"/Views/Messages/Inbox.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Nick\Documents\GitHub\PickNTour\PickNTour\PickNTour\Views\_ViewImports.cshtml"
using PickNTour;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Nick\Documents\GitHub\PickNTour\PickNTour\PickNTour\Views\_ViewImports.cshtml"
using PickNTour.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"057f3d1b584e3b1b45cad6a49a6d9beecc843b18", @"/Views/Messages/Inbox.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"2381805d9d01886713b65787dafbee74a3767085", @"/Views/_ViewImports.cshtml")]
    public class Views_Messages_Inbox : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<PickNTour.ViewModels.MessageOutcomeViewModel>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
            WriteLiteral("\r\n");
#nullable restore
#line 4 "C:\Users\Nick\Documents\GitHub\PickNTour\PickNTour\PickNTour\Views\Messages\Inbox.cshtml"
  
    ViewData["Title"] = "Inbox";
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<h1 style=\"text-align:center;\">My Inbox</h1>\r\n<hr />\r\n<br />\r\n\r\n<div>\r\n");
#nullable restore
#line 14 "C:\Users\Nick\Documents\GitHub\PickNTour\PickNTour\PickNTour\Views\Messages\Inbox.cshtml"
      
        if (Model.outcome.Equals("success"))
        {

#line default
#line hidden
#nullable disable
            WriteLiteral("            <div class=\"alert alert-success\">\r\n                <strong>Success!</strong> Your Message has been sent!\r\n            </div>\r\n");
#nullable restore
#line 20 "C:\Users\Nick\Documents\GitHub\PickNTour\PickNTour\PickNTour\Views\Messages\Inbox.cshtml"
        }

        else if (Model.outcome.Equals("notfound"))
        {

#line default
#line hidden
#nullable disable
            WriteLiteral("            <div class=\"alert alert-danger\">\r\n                <strong>Error!</strong> The Username you are attempting to send to does not exist!\r\n            </div>\r\n");
#nullable restore
#line 27 "C:\Users\Nick\Documents\GitHub\PickNTour\PickNTour\PickNTour\Views\Messages\Inbox.cshtml"
        }
    

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
    <table id=""inbox"" class=""table table-bordered table-hover"">
        <thead>
            <tr>
                <th>Date Sent</th>
                <th>Subject</th>
                <th>Message</th>
                <th>Username</th>
                <th>Full Name</th>
                <th>Reply</th>
                <th>Delete</th>
            </tr>
        </thead>
    </table>
</div>

");
            DefineSection("scripts", async() => {
                WriteLiteral(@"
    <script>
        $(document).ready(function () {
            var table = $(""#inbox"").DataTable({
                ajax: {
                    url: ""/api/messages/getreceivedmessages"",
                    dataSrc: """"
                },

                columns: [
                    {
                        data: ""dateSent"",
                        render: function (data) {
                            return moment(data).format('MMMM Do YYYY, h:mm:ss a')
                        }

                    },
                    {
                        data: ""subject""
                    },
                    {
                        data: ""messageBody"",
                        render: function (data, type, row) {
                            return ""<button class='btn btn-outline-info js-viewmsg' data-msg='"" + data + ""' data-id='"" + row.id + ""'>View Message</button>""
                        }
                    },
                    {
                        data: ""userFrom.user");
                WriteLiteral(@"Name""
                    },
                    {
                        data: ""userFrom.fullName""
                    },
                    {
                        data: ""userFrom.userName"",
                        render: function (data) {
                            return ""<button class='btn btn-outline-primary js-reply' data-user-userName='"" + data + ""'>Reply</button>""
                        }
                    },
                    {
                        data: ""id"",
                        render: function (data) {
                            return ""<button class='btn btn-outline-danger js-delete' data-delete-id="" + data + "">Delete</button>""
                        }
                    }

                ]


            });

            $(""#inbox"").on(""click"", "".js-delete"", function () {
                var button = $(this);

                bootbox.confirm(""Are you sure you want to delete this message?"", function (result) {
                    if (result) {

 ");
                WriteLiteral(@"                       $.ajax({
                            url: ""/api/messages/deletemessage/"" + button.attr(""data-delete-id""),
                            method: ""DELETE"",
                            success: function () {
                                table.row(button.parents(""tr"")).remove().draw();
                            }

                        });


                    }

                });

            });

            $(""#inbox"").on(""click"", "".js-viewmsg"", function () {
                var viewMsgBtn = $(this);

                bootbox.alert(viewMsgBtn.attr(""data-msg""));

                $.ajax({
                    url: ""/api/messages/readmessage/"" + viewMsgBtn.attr(""data-id""),
                    method: ""PUT"",
                    success: function () {
                    }

                });

            });

            $(""#inbox"").on(""click"", "".js-reply"", function () {
                var replyBtn = $(this);

                bootbox.confirm(""Are you");
                WriteLiteral(@" sure you want to reply to "" + replyBtn.attr(""data-user-userName"") + "" ?"", function (result) {
                    if (result) {
                        window.location.replace(""/messages/compose/"" + replyBtn.attr(""data-user-userName""));

                    }

                });


            });



        });
    </script>




");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<PickNTour.ViewModels.MessageOutcomeViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
